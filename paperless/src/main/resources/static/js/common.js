
//*******************************************
// 파일업로드 없는 상태에서 비동기 방식으로 웹서버에 접속하는 함수 선언. 
//*******************************************
function inputData(
	formObj
	,json_with_name_n_value
	
){	
	try{
		var json = json_with_name_n_value;
		var name,value,isCR;
		for(name in json ){
			value = json[name];
			isCR = formObj.find("[name='"+name+"']").is(":checkbox")
						||formObj.find("[name='"+name+"']").is(":radio");
			if( typeof(value)!="string" && typeof(value)!="number")       { value = ""; } 
			if( typeof(value)=="string" && value.split(" ").join("")=="" ){ value = ""; } 
			if(isCR){
				formObj.find("[name='"+name+"']").filter("[value='"+value+"']").attr("checked",true);
			}
			else{
				formObj.find("[name='"+name+"']").val(value);
			}
		}
	}catch(e){
		alert("inputData 함수 호출 시 예외 발생! " + e.message )
	}

}





//*******************************************
// 파일업로드 없는 상태에서 비동기 방식으로 웹서버에 접속하는 함수 선언. 
//*******************************************
function ajax(
	url2         // 비동기 방식으로 접속할 때 사용할 URL 주소 
	,postGet     // "post" 또는 "get".  웹서버에 접속할 때 데이터를 가져가는 방법
	,formObj     // 입력양식 태그가 내포된 form 태그를 관리하는 JQuery 객체
	,func        // 웹서버와 비동기 방식으로 통신에 성공한 후 호출되는 익명함수
	
){	
	//---------------------------------------------
	// form 태그 내부에 파일 입력 양식이 존재여부 얻기
	//---------------------------------------------
	var isfile = formObj.find("[type=file]").length>0;
	//---------------------------------------------
	// form 태그 내부에 파일 입력 양식이 존하면
	//---------------------------------------------
	if( isfile ){
			//------------------------------------
			// form 태그에 파일업로드에 필요한 enctype="multipart/form-data"  삽입하기
			//------------------------------------
			formObj.attr( "enctype","multipart/form-data" );
			//--------------------------------------
			// 현재 화면에서 페이지 이동 없이(=비동기 방식으로)
			// 웹서버에 접속하기
			//--------------------------------------
			$.ajax({
					//--------------------------------------
					// 서버 쪽 호출 URL 주소 지정
					//--------------------------------------
					url : url2
					//--------------------------------------
					// form 태그 안의 입력양식 데이터 즉, 파라미터값을 보내는 방법 지정
					//--------------------------------------
					, type : postGet
					
					//--------------------------------------
					// 파일업로드를 위한 설정
					//--------------------------------------
					//-------
					// 서버로 보내는 데이터에 파일이 있으므로
					// 전송하는 파라미터명, 파라미터값을 serialize를 하여 Query String으로 변경하지 않케 설정하기.
					// 서버로 보내는 데이터에 파일이 없으면  processData: false 을 생략한다.
					//-------
					,processData:false
					//-------
					// 서버로 보내는 데이터에 파일이 있으므로
					// 현재 form 태그에 설정된 enctype 속성값을 Content-Type 으로 사용하도록 설정하기.
					// 이게 없으면 현재 form 태그에 설정된 enctype 속성값과 관계없이 무조건 enctype 이 application/x-www-form-urlencoded 로 설정된다.
					// 서버로 보내는 데이터에 파일이 없으면  ,contentType: false  을 생략한다.
					//-------
					,contentType:false 
					//-------
					// 서버로 보내는 데이터  설정하기.
					// 서버로 보내는 데이터에 파일이 있으므로 FormData 객체 설정.
					//-------
					,data:new FormData(  formObj.get(0)  )     // 커마부문
					
					
					//----------------------------------------------------------
					// 서버의 응답을 성공적으로 받았을 경우 실행할 익명함수 설정.
					//----------------------------------------------------------
					, success : function(responseData){ func(responseData) }
					//----------------------------------------------------------
					// 서버의 응답을 못 받았을 경우 실행할 익명함수 설정
					//----------------------------------------------------------
					, error : function(){
						alert("웹서버 접속 실패! 관리자에게 문의 바람니다.");
					}
			});
	}
	else{
		$.ajax({
				//--------------------------------------
				// 서버 쪽 호출 URL 주소 지정
				//--------------------------------------
				url : url2
				//--------------------------------------
				// form 태그 안의 입력양식 데이터 즉, 파라미터값을 보내는 방법 지정
				//--------------------------------------
				, type : postGet
				//--------------------------------------
				// 서버로 보내는 데이터  설정하기.
				//--------------------------------------
				,data:formObj.serialize( )
				//----------------------------------------------------------
				// 서버의 응답을 성공적으로 받았을 경우 실행할 익명함수 설정.
				//----------------------------------------------------------
				, success : function(responseData){ func(responseData) }
				//----------------------------------------------------------
				// 서버의 응답을 못 받았을 경우 실행할 익명함수 설정
				//----------------------------------------------------------
				, error : function(){
					alert("웹서버 접속 실패! 관리자에게 문의 바람니다.");
				}
		});
	}

}





//*******************************************
// 파일업로드 없는 상태에서 비동기 방식으로 웹서버에 접속하는 함수 선언. 
//*******************************************
function ajax2(
	url2
	,postGet
	,json
	,func
	
){	
	$.ajax({
			//--------------------------------------
			// 서버 쪽 호출 URL 주소 지정
			//--------------------------------------
			url : url2
			//--------------------------------------
			// form 태그 안의 입력양식 데이터 즉, 파라미터값을 보내는 방법 지정
			//--------------------------------------
			, type : postGet
			//--------------------------------------
			// 서버로 보내는 데이터  설정하기.
			//--------------------------------------
			,data:json
			//----------------------------------------------------------
			// 서버의 응답을 성공적으로 받았을 경우 실행할 익명함수 설정.
			//----------------------------------------------------------
			, success : function(responseData){ func(responseData) }
			//----------------------------------------------------------
			// 서버의 응답을 못 받았을 경우 실행할 익명함수 설정
			//----------------------------------------------------------
			, error : function(){
				alert("서버 접속 실패");
			}
	});

}








































